# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import oilmarket_pb2 as oilmarket__pb2


class OilmarketStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Sign = channel.unary_unary(
                '/oilmarket.Oilmarket/Sign',
                request_serializer=oilmarket__pb2.SignRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.SignResponse.FromString,
                )
        self.Sell = channel.unary_unary(
                '/oilmarket.Oilmarket/Sell',
                request_serializer=oilmarket__pb2.SellRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.SellResponse.FromString,
                )
        self.CreateBuyer = channel.unary_unary(
                '/oilmarket.Oilmarket/CreateBuyer',
                request_serializer=oilmarket__pb2.CreateBuyerRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.ApiKeyResponse.FromString,
                )
        self.CreateAttester = channel.unary_unary(
                '/oilmarket.Oilmarket/CreateAttester',
                request_serializer=oilmarket__pb2.CreateAttesterRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.ApiKeyResponse.FromString,
                )
        self.CreateSeller = channel.unary_unary(
                '/oilmarket.Oilmarket/CreateSeller',
                request_serializer=oilmarket__pb2.CreateSellerRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.ApiKeyResponse.FromString,
                )
        self.AddBarrel = channel.unary_unary(
                '/oilmarket.Oilmarket/AddBarrel',
                request_serializer=oilmarket__pb2.AddBarrelRequest.SerializeToString,
                response_deserializer=oilmarket__pb2.AddBarrelResponse.FromString,
                )


class OilmarketServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Sign(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sell(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAttester(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBarrel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OilmarketServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Sign': grpc.unary_unary_rpc_method_handler(
                    servicer.Sign,
                    request_deserializer=oilmarket__pb2.SignRequest.FromString,
                    response_serializer=oilmarket__pb2.SignResponse.SerializeToString,
            ),
            'Sell': grpc.unary_unary_rpc_method_handler(
                    servicer.Sell,
                    request_deserializer=oilmarket__pb2.SellRequest.FromString,
                    response_serializer=oilmarket__pb2.SellResponse.SerializeToString,
            ),
            'CreateBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBuyer,
                    request_deserializer=oilmarket__pb2.CreateBuyerRequest.FromString,
                    response_serializer=oilmarket__pb2.ApiKeyResponse.SerializeToString,
            ),
            'CreateAttester': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAttester,
                    request_deserializer=oilmarket__pb2.CreateAttesterRequest.FromString,
                    response_serializer=oilmarket__pb2.ApiKeyResponse.SerializeToString,
            ),
            'CreateSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSeller,
                    request_deserializer=oilmarket__pb2.CreateSellerRequest.FromString,
                    response_serializer=oilmarket__pb2.ApiKeyResponse.SerializeToString,
            ),
            'AddBarrel': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBarrel,
                    request_deserializer=oilmarket__pb2.AddBarrelRequest.FromString,
                    response_serializer=oilmarket__pb2.AddBarrelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'oilmarket.Oilmarket', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Oilmarket(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Sign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/Sign',
            oilmarket__pb2.SignRequest.SerializeToString,
            oilmarket__pb2.SignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sell(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/Sell',
            oilmarket__pb2.SellRequest.SerializeToString,
            oilmarket__pb2.SellResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/CreateBuyer',
            oilmarket__pb2.CreateBuyerRequest.SerializeToString,
            oilmarket__pb2.ApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAttester(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/CreateAttester',
            oilmarket__pb2.CreateAttesterRequest.SerializeToString,
            oilmarket__pb2.ApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/CreateSeller',
            oilmarket__pb2.CreateSellerRequest.SerializeToString,
            oilmarket__pb2.ApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBarrel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/oilmarket.Oilmarket/AddBarrel',
            oilmarket__pb2.AddBarrelRequest.SerializeToString,
            oilmarket__pb2.AddBarrelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
